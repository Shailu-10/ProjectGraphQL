* {
  border: 0px;
  margin: 0px;
  padding: 0px;
  border-radius: 0px;
  box-sizing: border-box;
}
.createAccount {
  text-align: right;
}
.login {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* border: 1px solid white;*/
  /*
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  */
}
.form {
  border: 1px solid white;
  background-color: white;
  border-radius: 5px;
  display: flex;
  padding: 10px;
  flex-direction: column;
  width: 300px;
  height: 350px;
}
.inputWrapper {
  border-radius: 5px;
  margin: 10px;
  padding-left: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
  background-color: #d9d9d9;
  /*#b3b3b3*/
  display: flex;
  flex-direction: column;
}
.inputWrapper:has(input:focus) {
  outline: 2px solid black;
  border-radius: 5px;
  /*padding: 5px;*/
}
.Label {
  z-index: 1;
  font-size: 12px;
  font-family: Inter, sans-serif;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.529);
}
input {
  /*removing inupt element border*/
  border: none;
  outline: none;
  padding: 5px;
}
.inputElement {
  background-color: #d9d9d9;
}
.buttonWrapper {
  text-align: center;
  padding: 10px;
  margin: 10px;
  border-radius: 5px;
  background-color: black;
  color: white;
}
.buttonWrapper:hover {
  border-radius: 0px;
}
.svgArrow {
  /*display: inline-block;*/
  fill: white;
  width: 20px;
  height: 14px;
  /*display: none;*/
  /* visibility: hidden;
  transform: translateX(-20px);
  */
  /*position is absolute so that it don't take space*/
  position: absolute;
  visibility: hidden;
  top: 50%;
  transform: translateX(-100%);
  transition: transform 1s ease;
}
.buttonWrapper:hover .svgArrow {
  /*display: inline-block;*/
  visibility: visible;
  transform: translateX(0px);
}
.buttonWrapper:hover .buttonParagraph {
  transform: translateX(20px);
}
.buttonParagraph {
  display: inline-block;
  margin: 5px;
  transition: transform 1s ease;
}

.container {
  /*height: 100vh;*/
  /*background: #a855f7;*/
  display: flex;

  justify-content: center;
  align-items: center;
}

.helloWrapper {
  /* Optional: style if you want to wrap or animate more */
  padding: 10px;
  margin: 10px;
  flex: 1;
  background: linear-gradient(60deg, #00ffff, #ff02ff);
  align-items: center;
}
.headerWrapper {
  text-align: center;
}

h1 span {
  font-size: 20px;
  color: #fff;
  font-family: "Arial";
  text-transform: uppercase;
  display: inline-block;
  transform: rotateY(0deg);
  transition: 0.5s;
  animation: bounce 0.4s ease infinite alternate;
  position: relative;
}

/* Add delay for bounce animation */
h1 span:nth-child(2) {
  animation-delay: 0.1s;
}
h1 span:nth-child(3) {
  animation-delay: 0.2s;
}
h1 span:nth-child(4) {
  animation-delay: 0.3s;
}
h1 span:nth-child(5) {
  animation-delay: 0.4s;
}
h1 span:nth-child(6) {
  animation-delay: 0.5s;
}
h1 span:nth-child(7) {
  animation-delay: 0.6s;
}
h1 span:nth-child(8) {
  animation-delay: 0.7s;
}

@keyframes bounce {
  0% {
    top: 0;
  }
  100% {
    top: -10px;
    text-shadow: 0 1px 0 #ccc, 0 2px 0 #ccc, 0 3px 0 #ccc, 0 4px 0 #ccc,
      0 5px 0 #ccc, 0 6px 0 #ccc, 0 7px 0 #ccc, 0 8px 0 #ccc;
  }
}

.createAccount {
  /*create account paragraph*/
  /*position: relative;
  z-index: 1;S
  */
  /*position: absolute;
  top: 100%;
  left: 100%;
  transform: translate(-100%, -100%);
  /*font-size: 16px;
  text-align: right;
  /* font-weight: 600;*/
  color: white;
}
.createAccountParagraph {
  color: black;
  font-size: 12px;
  padding: 10px;
  text-align: right;
}
/*
login code


import React from "react";
import classes from "./Login.module.css";
const SvgArrow = () => {
  return (
    <svg
      className={classes.svgArrow}
      width="49"
      height="37"
      viewBox="0 0 49 37"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M32.996 0.556454C32.3285 -0.185485 31.2175 -0.185485 30.5266 0.556454C29.859 1.27333 29.859 2.46644 30.5266 3.18165L43.0481 16.6284H1.72877C0.765576 16.6301 0 17.4523 0 18.4866C0 19.521 0.765576 20.3699 1.72877 20.3699H43.0481L30.5266 33.7916C29.859 34.5336 29.859 35.7283 30.5266 36.4435C31.2175 37.1855 32.33 37.1855 32.996 36.4435L48.4818 19.8134C49.1727 19.0966 49.1727 17.9034 48.4818 17.1882L32.996 0.556454Z"
        fill={classes.arrowPath}
      />
    </svg>
  );
};
export default function LoginPage() {
  return (
    <>
      <div className={classes.login}>
        <div className={classes.form}>
          <div className={classes.inputWrapper}>
            <label htmlFor="username" className={classes.Label}>
              USERNAME OR EMAIL{" "}
            </label>
            <input type="text" id="username" className={classes.inputElement} />
          </div>
          <div className={classes.inputWrapper}>
            <label htmlFor="password" className={classes.Label}>
              PASSWORD
            </label>
            <input
              id="password"
              type="password"
              className={classes.inputElement}
            />
          </div>
          <div className={classes.buttonWrapper}>
            <SvgArrow />
            <p className={classes.buttonParagraph}>Log in</p>
          </div>
          <div className={classes.container}>
            <div className={classes.helloWrapper}>
              <h1 className={classes.headerWrapper}>
                <span>W</span>
                <span>E</span>
                <span>L</span>
                <span>C</span>
                <span>O</span>
                <span>M</span>
                <span>E</span>
                <span>!</span>
              </h1>
            </div>
          </div>

          <div className={classes.createAccount}>
            <p className={classes.createAccountParagraph}>
              doesn't have account? <a href="/">Create Account</a>
            </p>
          </div>
        </div>
      </div>
    </>
  );
}
//use curly braces for assigning class because,
//class is an variable not string, we need to access property value
//so do like {this}
/*
className={classes.svgArrow}
<div className={classes.Login}>
        <div>
          <div className={classes.form}>
            <div>
              <label>Email or UserName: </label>
              <input
                className={classes.inputText}
                placeholder="Input Login Credentials"
                type="email"
              />
            </div>
            <div>
              <label>Password: </label>
              <input
                className={classes.inputText}
                placeholder="Login Password"
                type="password"
              />
            </div>

            <button className={classes.loginButton}>
              <SvgArrow />
              <span className={classes.svgPara}>Log In</span>
            </button>
          </div>

          <div className={classes.createAccount}>
            <p className={classes.paragraphCreateAccount}>
              doesn't have account? <a href="/">Create Account</a>
            </p>
          </div>
        </div>
      </div>
*/
